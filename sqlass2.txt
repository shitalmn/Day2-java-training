SQL Assignment


Library System

Use the following Schema to perform the given set of assignment.

Tables-

Member – It contains information about the members
Column Name	Data Type	Description
Member_Id	Int(5)	Unique Member ID
Member_Name	Varchar(30)	 Name of the Library member
Member_address	Varchar(50)	Address of the member
Acc_Open_Date	Date	Date of membership
Membership_type	Varchar(20)	Type of the membership such  as ‘Lifetime’,’ Annual’,
‘Half Yearly’,’ Quarterly’
Fees_paid	Int(4)	Membership fees paid
Max_Books_Allowed	Int(2)	Total Int of books that can be issued to the member.
Penalty_Amount	Int(7,2)	Penalty amount due



create table Member
(
Member_Id Int Primary Key,
Member_Name Varchar(30),
Member_address Varchar(50),
Acc_Open_Date date,
Membership_type Varchar(20) Check ( Membership_type in ('Lifetime','Annual','Half Yearly','Quarterly')),
Fees_paid Int,
MAx_Books_Allowed Int,
Penalty_Amount Int
);

insert into Member values (1,'Richa Sharma','Pune','2005-12-10','Lifetime',2500,5,50);

insert into Member values (2,'Garima Sen','Pune',current_timestamp,'Annual',1000,3,Null);



insert into Member values (3,'Parag Sen','Mumbai','2011-08-10','Lifetime',1500,2,50);

insert into Member values (4,'Nitesh Karsi','Nashik','2012-01-11','Lifetime',500,3,60);

insert into Member values (5,'Rohit Rathod','Nagpur','2008-12-12','Lifetime',1500,4,70);

insert into Member values (6,'Sandip Jadhav','Mumbai','2009-07-10','Lifetime',300,5,80);

insert into Member values (7,'Ritika Singh','Delhi','2010-10-10','Lifetime',800,5,50);


Books- It contains information about the books belongs to the library
Column Name	Data Type	Description
Book_No	Int(6)	Book identification Int
Book_Name		Varchar(30)	Name of the book
Author_name	Varchar(30)	Author of the book
Cost	Int(7,2)	Cost of the book
Category	Char(10)	Category like Science , Fiction etc.



create table Books
(
Book_No		Int,
Book_Name	Varchar(30),
Author_name	Varchar(30),
Cost		Int,
Category	Char(10)
);

			
Issue – It contains the information about issue of the books
Column Name	Data Type	Description
Lib_Issue_Id	Int(10)	Library Book Issue No
Book_No	Int(6)	Int of the book issued
Member_Id	Int(5)	Member that issued the book
Issue_Date	Date	Date of Issue
Return_date	Date	Return date

create table Issue
(
Lib_Issue_Id	Int,
Book_No		Int,
Member_Id	Int,
Issue_Date	Date,
Return_date	Date
);
	

insert into Issue values (7001,101,1,'2006-12-10',null);
insert into Issue values (7002,102,2,'2006-12-25',null);
insert into Issue values (7003,104,1,'2006-01-15',null);
insert into Issue values (7004,101,1,'2006-07-04',null);
insert into Issue values (7005,104,2,'2006-11-15',null);
insert into Issue values (7006,101,3,'2006-02-18',null);
insert into Issue values (7007,101,10,'2006-12-10','2006-12-10');

Day # 2 Assignments (Estimated Time: 2 Hrs)

Concept: 	Select Command
SQL operators and functions
Single Row functions: Date, Numeric, Character functions,
Aggregate functions.

Objective: 	At the end of the assignments, participants will be confident to understand basic select query, Logical, Arithmetic operators, Date, character, Numeric function and regular expression functions. Aggregate functions and their use.

Task / Problems:
	
1)	List all the books that are written by Author Loni and has price  
		less then 600.
		
		select * from books where author_name = 'loni' and cost < 600;
		
		
2)	List the Issue details for the books that are not returned yet.
	select * from issue where return_date is NULL;

3)	Update all the blank return_date with 31-Dec-06 excluding 7005 and 7007.

	update issue set return_date='2006-12-31' where return_date is NULL and Lib_issue_id not between 7005 and 7006;
	
	
4)	List all the Issue details that have books issued for more then 30 days.

 select * from issue where datediff(issue_date ,return_date)<30;
 
5)	List all the books that have price in range of 500 to 750 and has category as Database.

	select * from books where cost between 500 and 750 and category = 'database';
	
6)	List all the books that belong to any one of the following categories Science, Database, Fiction, Management.
	 select * from books where category in ('science','database','fiction','management');
	
7)	List all the members in the descending order of Penalty due on them.
	select * from member order by penalty_amount desc;
	
8)	List all the books in ascending order of category and descending order of price.
	select * from category order by cost;
	
9)	List all the books that contain word SQL in the name of the book.

10)	List all the members whose name starts with R or G and contains letter I in it.
11)	List the entire book name in Init cap and author in upper case in the descending order of the book name.

select upper(author_name),book_name from books order by book_name desc;

initcap in oracle not in sql 

12)	List the Issue Details for all the books issue by member 101  
with Issue_date and Return Date in following format. ‘Monday, 
July, 10, 2006’.


13)	List the data in the book table with category data displayed as  
	D for Database, S for Science, R for RDBMS and O for all the  
others.
14)	List all the members that became the member in the year 2006.
15)	List the Lib_Issue_Id, Issue_Date, Return_Date and No of days 
Book was issued.
16)	Find the details of the member of the Library in the order of their 
joining the library.


select * from member order by acc_open_date;


17)	Display the count of total no of books issued to Member 101.

select count(member_id) as total_no_of_books from issue where member_id=1;

18)	Display the total penalty due for all the members.

 select sum(penalty_amount) as total_penalty from member;
 
19)	Display the total no of members 

select count(member_id) as Total_Members from member;
20)	Display the total no of books issued 
select count(lib_issue_id) as Books_Issued from issue;
21)	Display the average membership fees paid by all the members
select avg(fees_paid) from member;
22)	Display no of months between issue date and return date for all issue
select round(datediff(return_date,issue_date)/12) as date from issue;
23)	Display the length of member’s name
SELECT length(member_name) as namelength from member;
24)	Display the first 5 characters of  membership_type for all members
select member_name,substr(membership_type,1,5) from member;
25)	Display the last day of the month of issue date 
select lib_issue_id,book_no,member_id,last_day(issue_date) as Last_Issue_Date from issue;
